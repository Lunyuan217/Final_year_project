# -*- coding: utf-8 -*-
"""data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IKebxF4LkLaslpNT2ti1cbGeCA1LXBNn
"""

import scipy.io as io
from torch.utils.data import DataLoader, Dataset
import torch
import numpy as np
class MyDataset(Dataset):
   def __init__(self, gt_path):      
       data = io.loadmat(gt_path)   #load original dara
       self.ground_truth = torch.FloatTensor(data['Groud_Truth'])   #convert to float tensor      
 
   def __getitem__(self, index):
       x = self.ground_truth[index]  #get data by index
       return x
     
   def __len__(self):
       return len(self.ground_truth)  #get the length of data

def dataloader_train(path,batch):
    train_dataset = MyDataset(path)
    train_loader = torch.utils.data.DataLoader(dataset=train_dataset,
                                           batch_size=batch, 
                                           shuffle=True)    # create the dataloader for specific batch_size
    return train_loader,train_dataset
def dataloader_test(path,batch):
    test_dataset = MyDataset(path)
    test_loader = torch.utils.data.DataLoader(dataset=test_dataset,
                                           batch_size=batch, 
                                           shuffle=False)   # create the dataloader for specific batch_size
    return test_loader,test_dataset

