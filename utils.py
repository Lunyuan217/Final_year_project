# -*- coding: utf-8 -*-
"""Utils.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14oDHThNjD9RekhGr9cfK2bu5LuhNd59Z
"""

import matplotlib.pyplot as plt
import torch
import numpy as np

def PSNR_cal(original, compressed,max_pixel):
    mse = torch.mean((original - compressed) ** 2)
    if(mse == 0):  # MSE is zero means no noise is present in the signal .
                  # Therefore PSNR have no importance.
        return 100
    psnr = 20 * torch.log10(max_pixel / torch.sqrt(mse))
    return psnr.detach().cpu().numpy()
def show_images(imgs, titles=None, keep_range=True, shape=None, figsize=(8, 8.5)):
    imgs = [x.cpu().numpy() for x in imgs]
    combined_data = np.array(imgs)

    if titles is None:
        titles = [str(i) for i in range(combined_data.shape[0])]

    # Get the min and max of all images
    if keep_range:
        _min, _max = np.amin(combined_data), np.amax(combined_data)
    else:
        _min, _max = None, None

    if shape is None:
        shape = (1, len(imgs))

    fig, axes = plt.subplots(*shape, figsize=figsize, sharex=True, sharey=True)
    ax = axes.ravel()
    for i, (img, title) in enumerate(zip(imgs, titles)):
        ax[i].imshow(img, cmap=plt.cm.Greys_r, vmin=_min, vmax=_max)
        ax[i].set_title(title)